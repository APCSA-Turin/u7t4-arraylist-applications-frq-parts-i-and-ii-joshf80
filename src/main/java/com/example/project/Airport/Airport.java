package com.example.project.Airport;
import java.util.ArrayList;

public class Airport  {
    /** A list of the flights into and out of this airport
     *  Guaranteed not to be null and to contain only non-null entries
     */
    private ArrayList<Flight> allFlights;

    public Airport(ArrayList<Flight> flights) {
        allFlights = flights;
    }

    public ArrayList<Flight> getAllFlights() {
        return allFlights;
    }

    /** Returns the revenue generated by all flights at the airport,
     *  as described in part (a)
     */
    public double getTotalRevenue() {
        double totalRevenue = 0.0;
        for (Flight flight : allFlights) {
            if (flight.getNumPassengers() > flight.getCapacity()) {
                totalRevenue += flight.getCapacity() * flight.getPrice();
            } else {
                totalRevenue += flight.getPrice() * flight.getNumPassengers();
            }
        }
        return totalRevenue;
    }

    /** Updates the list of flights by removing certain flights and
     *  returns the total number of passengers whose flights were removed,
     *  as described in part (b)
     */
    public int updateFlights() {
        /* to be implemented in part (b) */
        int passengers = 0;
        int count = 0;

        for (int i = 0; i < allFlights.size(); i++) {
            if (allFlights.get(i).getCapacity() * .2 > allFlights.get(i).getNumPassengers()) {
                passengers += allFlights.get(i).getNumPassengers();
                count++;
                allFlights.add(0, allFlights.remove(i));
            }
        }

        for (int i = 0; i < count; i++) {
            allFlights.remove(0);
        }
        
        return passengers;
    }
}